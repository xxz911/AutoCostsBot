import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from aiogram.utils.exceptions import BotBlocked

from settings import API_TOKEN
from messages import *
from keyboards import *

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.DEBUG)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
async def on_startup(_):
    print('___–ë–æ—Ç –∑–∞–ø—É—Å—Ç–∏–ª—Å—è!___')


# –í—ã–≤–æ–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message) -> None:
    f_name = message.from_user.first_name
    await message.answer(
        text=get_start_message(f_name),
        parse_mode="HTML",
        reply_markup=kb
        )
    await send_help(message=message)
    await send_main(message=message)


@dp.message_handler(Text(equals='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
async def send_main(message: types.Message) -> None:
    await message.answer(
        text="üìù–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ–∏ —Ä–∞—Å—Ö–æ–¥—ã",
        reply_markup=kb
        )
    await message.delete()


@dp.message_handler(Text(equals='üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'))
async def send_statistic(message: types.Message) -> None:
    await message.answer(
        text="‚úÖ–í—ã–±–µ—Ä–∏ –ø–µ—Ä–∏–æ–¥",
        reply_markup=kb_statistic
        )
    await message.delete()


@dp.message_handler(Text(equals='üÜò–ü–æ–º–æ—â—å'))
async def send_help(message: types.Message) -> None:
    await message.answer(
        text=HELP_MESSAGE,
        parse_mode="HTML",
        reply_markup=kb
        )


@dp.message_handler(Text(equals='üå°Ô∏è–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç'))
async def send_limit(message: types.Message) -> None:
    await message.answer(
        text="üìù–ù–∞–ø–∏—à–∏ —Å—É–º–º—É –∏ –ø–µ—Ä–∏–æ–¥ –ª–∏–º–∏—Ç–∞(–¥–µ–Ω—å, –º–µ—Å—è—Ü, –≥–æ–¥)\n"
             "–ü—Ä–∏–º–µ—Ä: 10000 –º–µ—Å—è—Ü",
        parse_mode="HTML",
        reply_markup=kb_main
    )
    await message.delete()


# –ü–æ–∫–∞ —á—Ç–æ —ç—Ö–æ –æ—Ç–≤–µ—Ç
@dp.message_handler(content_types=types.ContentType.TEXT)
async def do_echo(message: types.Message) -> None:
    await message.reply(
        text='‚ù§Ô∏è',
        reply_markup=kb
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –±–æ—Ç–∞ –ø—Ä–∏ –µ–≥–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
@dp.errors_handler(exception=BotBlocked)
async def err_bot_blocked_handler(update: types.Update, exception: BotBlocked) -> bool:
    print("_____________block________________")
    return True

# –æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä
if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup, skip_updates=False)
